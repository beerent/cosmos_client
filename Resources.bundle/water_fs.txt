#version 100 
precision highp float;

varying vec2 fTexCord;

varying vec3 fNormal;
uniform float deltaTime;

uniform sampler2D mytexture2;
uniform sampler2D mytexture;

void main(void) {    
vec4 fragColor;
vec4 fragColor2;
vec2 fTexCord2;
vec2 adjusteTexCord;
vec2 adjusteTexCord2;
vec4 fadeValue;
fTexCord2.x = fTexCord.y;
fTexCord2.y = fTexCord.x;

adjusteTexCord = fTexCord;
int deltaTimeInterval = int(deltaTime / 6.0);
adjusteTexCord.x = adjusteTexCord.x + float(deltaTimeInterval) * 0.333;

adjusteTexCord2 = fTexCord2;
int deltaTimeInterval2 = int((deltaTime + 3.0) / 6.0);
adjusteTexCord2.x = adjusteTexCord2.x + float(deltaTimeInterval2) * 0.333;


fragColor = texture2D(mytexture, adjusteTexCord  * vec2(1.0, -1.0)) /** vec4(fNormal, 1.0)*/;
fragColor2 = texture2D(mytexture, adjusteTexCord2 * vec2(1.0, -1.0)) /** vec4(fNormal, 1.0)*/;
float percent = mod(deltaTime, 6.0) / 3.0;

fadeValue = texture2D(mytexture2, vec2(percent / 2.0, 0.5));

float leftPercent = fadeValue.x;
float rightPercent = 1.0 - leftPercent;
fragColor = fragColor * leftPercent + fragColor2 * rightPercent;
float shadeLevels = 35.0;
fragColor.x = float(int(fragColor.x * shadeLevels)) / shadeLevels;
fragColor.y = float(int(fragColor.y * shadeLevels)) / shadeLevels;
fragColor.z = float(int(fragColor.z * shadeLevels)) / shadeLevels;
gl_FragColor = fragColor;
}